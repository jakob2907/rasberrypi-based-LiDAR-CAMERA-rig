// Generated by gencpp from file livox_ros_driver/CustomPoint.msg
// DO NOT EDIT!


#ifndef LIVOX_ROS_DRIVER_MESSAGE_CUSTOMPOINT_H
#define LIVOX_ROS_DRIVER_MESSAGE_CUSTOMPOINT_H

#include <cstdint>
#include <memory>

namespace livox_ros_driver2  // Change from livox_ros_driver to livox_ros_driver2
{
namespace msg
{

struct CustomPoint
{
  uint32_t offset_time;    // offset time relative to the base time
  float x;                 // X axis, unit:m
  float y;                 // Y axis, unit:m
  float z;                 // Z axis, unit:m
  uint8_t reflectivity;    // reflectivity, 0~255
  uint8_t tag;             // livox tag
  uint8_t line;            // laser number in lidar

  // Constructors
  CustomPoint()
    : offset_time(0)
    , x(0.0f)
    , y(0.0f)
    , z(0.0f)
    , reflectivity(0)
    , tag(0)
    , line(0)
  {
  }

  CustomPoint(uint32_t offset_time_, float x_, float y_, float z_, 
              uint8_t reflectivity_, uint8_t tag_, uint8_t line_)
    : offset_time(offset_time_)
    , x(x_)
    , y(y_)
    , z(z_)
    , reflectivity(reflectivity_)
    , tag(tag_)
    , line(line_)
  {
  }

  // Type aliases for ROS 2
  using SharedPtr = std::shared_ptr<CustomPoint>;
  using ConstSharedPtr = std::shared_ptr<const CustomPoint>;
  using UniquePtr = std::unique_ptr<CustomPoint>;
  using ConstUniquePtr = std::unique_ptr<const CustomPoint>;

  // Message type info
  static constexpr const char* MESSAGE_TYPE = "livox_ros_driver2/msg/CustomPoint";
};

} // namespace msg
} // namespace livox_ros_driver2

#endif // LIVOX_ROS_DRIVER_MESSAGE_CUSTOMPOINT_H
